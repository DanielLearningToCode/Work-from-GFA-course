@model Reddit.Models.IndexViewModel
@{string sortType = Model.SortByDate ? "date" : "votes";
    string select = "selected";
    int[] choices = { 5, 10, 15 };
}
<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="~/css/bootstrap.css" rel="stylesheet" />
    <title>Reddit</title>
</head>
<body>
    <div class="container">
        @Html.ActionLink("Submit New", "SubmitNew", "Home", null, new { @class = "badge badge-pill badge-dark" })

        <h1>Trending posts</h1>
        <p>
            You are on page: @(Model.CurrentPage + 1), Sorted by: @sortType Post per page: @using (Html.BeginForm("Index", "Home", FormMethod.Get))
            {
                <div class="form-group">
                    <input type="hidden" name="page" value="@Model.CurrentPage" />
                    <input type="hidden" name="sortByDate" value="@Model.SortByDate" />
                    <select id="postsPerPage" value="@Model.PostsPerPage" name="postsPerPage">
                        @foreach (int choice in choices)
                        {
                            @if (choice == Model.PostsPerPage)
                            {
                                <option value="@choice" selected="@select">@choice</option>
                            }
                            else
                            {
                                <option value="@choice">@choice</option>
                            }
                        }
                    </select>
                    <input type="submit" value="display" class="btn btn-light" />
                </div>
            }</ p >
            <span>@Html.ActionLink("Sort by date", "Index", "Home", new { page = Model.CurrentPage, sortByDate = true, postsPerPage = Model.PostsPerPage }, new { @class = "badge badge-pill badge-dark" })</span>
            <span>@Html.ActionLink("Sort by votes", "Index", "Home", new { page = Model.CurrentPage, sortByDate = false, postsPerPage = Model.PostsPerPage }, new { @class = "badge badge-pill badge-dark" })</span>
            <span>
                @using (Html.BeginForm("FilterByUser", "Home", FormMethod.Post))
                {
                    <input type="hidden" name="page" value="@Model.CurrentPage" />
                    <input type="hidden" name="sortByDate" value="@Model.SortByDate" />
                    <input type="hidden" id="postsPerPage" value="@Model.PostsPerPage" name="postsPerPage" />
                    <label for="author">Filter by author</label>
                    <select id="author" name="author">
                        @foreach (var author in Model.Names)
                        {
                            <option value="@author">@author</option>
                        }
                    </select>
                    <input type="submit" value="Filter" />
                }
            </span>
            <div class="row">
                <div class="col">
                    <span><strong>Upvote</strong></span>
                </div>
                <div class="col">
                    <span><strong>Downvote</strong></span>
                </div>
                <div class="col">
                    <span><strong>Current Votes</strong></span>
                </div>
                <div class="col">
                    <span><strong>Title</strong></span>
                </div>
                <div class="col">
                    <span><strong>Published</strong></span>
                </div>
                <div class="col">
                    <span><strong>Author</strong></span><br />
                </div>
            </div>
            @foreach (var post in Model.Posts)
            {
                <div class="row">
                    <div class="col">
                        <span class="vote-btn">@Html.ActionLink(" + ", "UpVote", "Home", new { id = post.Id, page = Model.CurrentPage, sortByDate = Model.SortByDate, postsPerPage = Model.PostsPerPage }, new { @class = "badge badge-success" })</span>
                        <span class="vote-btn">@Html.ActionLink(" - ", "DownVote", "Home", new { id = post.Id, page = Model.CurrentPage, sortByDate = Model.SortByDate, postsPerPage = Model.PostsPerPage }, new { @class = "badge badge-warning" })</span>
                    </div>
                    <div class="col">
                        <span class="votes">@post.Votes</span>
                    </div>
                    <div class="col">
                        <span class="title-link"><a href="@post.URL" target="_blank">@post.Title</a></span>
                    </div>
                    <div class="col">
                        <span class="published">@(post?.CreatedDate)</span>
                    </div>
                    <div class="col">
                        <span class="user">@post.User.Name</span>
                    </div>
                </div>
            }
        <p>Page: </p>
        @for (int i = 0; i < Model.PageCount; i++)
        {
            @Html.ActionLink(Convert.ToString(i + 1) + "  ", "Index", "Home", new { page = i, sortByDate = Model.SortByDate, postsPerPage = Model.PostsPerPage })
        }
    </div>
</body>
</html>
